# -*- coding: utf-8 -*-
"""5.Gün.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12_iqcwFXlN-nqSnaFQPE1MUCZsM5sECl
"""

def merhaba():
  print('Herkese Merhaba!!')

merhaba()  #fonksiyonu çağırma  #parametre almayan fonksiyonlar

def merhaba(hakan):
  print('Merhaba' + hakan)

def func1():
  print('Hello World!!')


  func1()
  print('hakan')
  func1()

def toplam(a,b):
  sum = a + b
  print(sum)

t = toplam(8,9)
print(t)

def func(x,y):
  toplam = x + y 
  carpim = x + y 
  return (toplam,carpim)

t,c = func(23,45)

print(t,c)

print('Değerlerin toplamı:' + str(t) +'Değerlerin çarpımı:' + str(c))

# Bir fonksiyon yazalım, girilen sayının karesini alsın ama 5 rakamı girince de sonlandırsın ve bize hata mesajı versin



def kare(x):
  if x == 5:
    return ('5 girdiğiniz fonksiyon sonlandırınız')

  sonuc = x**2 
  return(sonuc)

kare(10)

kare(5)

d = kare(5)
print(d)

#faktöriyel hesabı yapan fonksiyonu yazalım


def faktoriyel3(sayi):
  faktoriyel = 1
  if(sayi == 0 or sayi == 1):
    print('Faktoriyel:',faktoriyel)
  else:
    for i in range(faktoriyel,sayi+1):
      faktoriyel *= sayi
      sayi -= 1
    print('Faktoriyel:' , faktoriyel)

x = faktoriyel3(6)
print(x)

# boolean değikenli bir büyük harf küçük harf çıktısı veren fonksiyon yazalım.


def merhaba2(isim, buyukHarf = False):
  if buyukHarf:
    print('Merhaba' + isim.upper())
  else:
    print('Merhaba' + isim)

merhaba2('Hakan')

merhaba2('Hakan', buyukHarf= True)

def carp(*args):
  sonuc = 1
  for i in args:
    sonuc *= i
  print(sonuc)  


  # *args ifade demet tipli veri tutar.

carp(4,5,6,7,8)

carp(1,3,4,5,6,9,8)

import tensorflow as tf
import numpy as np

x = 5

print(x)

def yazdir():
  x = 4
  return(x)

yazdir()

print(x)